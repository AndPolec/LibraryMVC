@model LibraryMVC.Application.ViewModels.Loan.LoanDetailsVm

@{
    ViewData["Title"] = $"Zamówienie nr {@Model.Id}";
}

<partial name="_Notification" />

<div class="container p-4 bg-light bg-opacity-75 rounded-3 shadow-lg border">
    <div class="row">
        <div class="col-6">
            <h3>@ViewData["Title"]</h3>
            <hr />
        </div>
    </div>
    <div class="row">
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Status)
            </dt>
            <dd class="col-sm-10">
                @if (Model.Status == "Zaległe")
                {
                    <strong class="text-danger">@Html.DisplayFor(model => model.Status)</strong>
                }
                else
                {
                    <strong>@Html.DisplayFor(model => model.Status)</strong>
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreationDate)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreationDate)
            </dd>
            @if (Model.IsCheckedOut)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.IsCheckedOut)
                </dt>
                <dd class="col-sm-10">
                    @if (Model.IsCheckedOut)
                    {
                        <i class="fa-solid fa-square-check fa-xl"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-square-xmark fa-xl"></i>
                    }
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.CheckOutDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.CheckOutDate)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ReturnDueDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ReturnDueDate)
                </dd>
            }
           
            @if (Model.IsReturned)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.IsReturned)
                </dt>
                <dd class="col-sm-10">
                    @if (Model.IsReturned)
                    {
                        <i class="fa-solid fa-square-check fa-xl"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-square-xmark fa-xl"></i>
                    }
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ReturnDate)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ReturnDate)
                </dd>
            }
            @if (Model.isOverdue)
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.isOverdue)
                </dt>
                <dd class="col-sm-10">
                    @if (Model.isOverdue)
                    {
                        <i class="fa-solid fa-square-check fa-xl"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-square-xmark fa-xl"></i>
                    }
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ReturnRecord.TotalAmountOfPaidPenalty)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ReturnRecord.TotalAmountOfPaidPenalty)
                </dd>
            }
        </dl>
    </div>
    <div class="row mt-3">
        <div class="col-6">
            <h5>@Html.DisplayNameFor(model => model.Books)</h5>
            <hr />
        </div>
        <div class="col-12">
            @{int count = 1;}
            @foreach (var item in Model.Books)
            {
                <text>@count. @item.Title, @item.AuthorFullName, @item.RelaseYear</text>
                <br />
                count++; 
            }
        </div>
    </div>
    @if (Model.IsReturned)
    {
        <div class="row my-5">
            <div class="col-md-6">
                <div class="col">
                    <h5>@Html.DisplayNameFor(model => model.ReturnRecord.ReturnedBooks)</h5>
                    <hr />
                </div>
                <div class="col-12">
                    @{
                        count = 1;
                    }
                    @foreach (var item in Model.ReturnRecord.ReturnedBooks)
                    {
                        <text>@count. @item.Title, @item.AuthorFullName, @item.RelaseYear</text>
                        <br />
                        count++;
                    }
                </div>
            </div>
            <div class="col-md-6">
                <div class="col">
                    <h5>@Html.DisplayNameFor(model => model.ReturnRecord.LostOrDestroyedBooks)</h5>
                    <hr />
                </div>
                <div class="col-12">
                    @{
                        count = 1;
                    }
                    @foreach (var item in Model.ReturnRecord.LostOrDestroyedBooks)
                    {
                        <text>@count. @item.Title, @item.AuthorFullName, @item.RelaseYear</text>
                        <br />
                        count++;
                    }

                    <h5>
                        @Html.DisplayNameFor(model => model.ReturnRecord.AdditionalPenaltyForLostAndDestroyedBooks): @Html.DisplayFor(model => model.ReturnRecord.AdditionalPenaltyForLostAndDestroyedBooks)
                    </h5>
                </div>
            </div>
        </div>
    }

    <div class="row mt-3">
        <div class="d-grid gap-2 d-md-block">
            @if (User.IsInRole("Bibliotekarz"))
            {
                <a class="btn btn-primary" role="button" asp-controller="LibraryUser" asp-action="ViewUserDetails" asp-route-libraryUserId="@Model.LibraryUserId">
                    <i class="fa-solid fa-arrow-left-long"></i> Wróć
                </a>
            }
            else
            {
                <a class="btn btn-primary" role="button" asp-action="Index">
                    <i class="fa-solid fa-arrow-left-long"></i> Wróć
                </a>
            }
            @if (!Model.IsCheckedOut)
            {
                <a asp-action="CancelLoan" asp-controller="Loan" asp-route-loanId="@Model.Id" class="btn btn-danger" role="button">
                    <i class="fa-solid fa-circle-xmark"></i> Anuluj
                </a>
            }
            else
            {
                <button class="btn btn-danger" disabled>
                    <i class="fa-solid fa-circle-xmark"></i> Anuluj
                </button>
            }
        </div>
    </div>
</div>


